[{"Row":1,"ProjectName":"Error Control System","Id":1,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/ErrorControlSystem/ErrorControlSystem.jpg","Category":"   Win32 Library,   WPF","ProjectUrl":"https://github.com/Behzadkhosravifar/ErrorControlSystem","OpenSource":true,"Description":"ErrorControlSystem is a .NET library created to automate handling .NET Windows-Base application exceptions and raise that to a sql server. This exception handler have some features as screen capturing, fetch server date time in exception occurrence time and etc.","Price":0.0,"Markdown":"\r\n<div align=\"center\">\r\n\r\n[![Error Control System.png](http://resources.xomorod.com/web-applications/products/images/ErrorControlSystem/ErrorControlSystem.jpg)](https://www.nuget.org/packages/ErrorControlSystem)\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/lnjusej10c0451xw?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/errorcontrolsystem)\r\n[![Nuget count](http://img.shields.io/nuget/v/errorcontrolsystem.svg)](https://www.nuget.org/packages/errorcontrolsystem/)\r\n[![Nuget downloads](http://img.shields.io/nuget/dt/errorcontrolsystem.svg)](https://www.nuget.org/packages/errorcontrolsystem/)\r\n[![Source Browser](https://img.shields.io/badge/Browse-Source-green.svg)](http://sourcebrowser.io/Browse/Behzadkhosravifar/ErrorControlSystem)\r\n\r\n</div>\r\n---------------------\r\n---------------------\r\n### What Is This?\r\n\r\nThis is a C#.Net project's for manage __Exceptions__ of your .Net applications by handling and \r\nlogging that. This is a .dll modules to provide error handling worker on your app background's.\r\nThe modules strive to be simple, well documented and\r\nmodification friendly, in order to help developers quickly learn their inner\r\nworkings.\r\n\r\nNOTE: \r\n>     This program is only for exception handling of \r\n>     Windows-based applications (WinForms, WPF, Console)\r\n>     that are written by .NET languages such as C#, VB.NET, Visual F#\r\n\r\n---------------------\r\n### Settings\r\n\r\nIn the initialize code snippet you've seen that, for the `ExceptionHandler.Engine` method should be an option. \r\nThis option is used to specify the error data, which includes the following values:\r\n\r\n*  None \r\n*  DisplayUnhandledExceptions \r\n*  ReportHandledExceptions \r\n*  Snapshot \r\n*  FetchServerDateTime \r\n*  ResizeSnapshots \r\n*  EnableNetworkSending \r\n*  FilterExceptions \r\n*  ExitApplicationImmediately \r\n*  HandleProcessCorruptedStateExceptions \r\n*  DisplayDeveloperUI \r\n*  LogOnTheFly \r\n*  All \r\n*  Default = All - (ExitApplicationImmediately, HandleProcessCorruptedStateExceptions) \r\n\r\nFor example in above codes, this code means is:\r\n\r\n\r\n```C#\r\nExceptionHandler.Engine.Start(\"localhost\", \"UsersManagements\",\r\n                ErrorHandlingOptions.Default & ~ErrorHandlingOptions.ResizeSnapshots);\r\n```\r\nSelect all options by excepted `ResizeSnapshots`\r\n\r\nBy adding the our module starter code to the beginning of your program code, you can raise all exceptions history, including __Handled__ or __UnHandled__ exceptions on the your database.\r\n\r\nNote:\r\n>     In the new version 2.1.1.0 and later, the option set in from database at runtime, \r\n>     and not necessary to set that from initial  Start  method\r\n\r\n\r\n--------------------------\r\n### How To Install The Modules\r\n\r\n\r\n\r\n1. Install examples for developers (unpacking it to your disk, and go to\r\n\\ErrorControlSystem\\out\\ErrorControlSystem\\... directory if you're installing by hand, for example).\r\n\r\n Note:\r\n>      If there is not any file in the out folders, \r\n>      run the buildx86.bat (or buildx64 on 64bit Operation System) file \r\n>      to compile project and create executable files.\r\n>      Or \r\n>      please open project .sln file on Visual Studio 2013 \r\n>      and debug/release that to compile native files.\r\n\r\n\r\n2. In your project reference add this module dll file:  \r\n   References > Add Reference... > Browse to above path > Select ErrorControlSystem.dll\r\n\r\n3. Rebuild access permissions if you are prompted to.\r\n\r\nNow you can read the code and its comments and see the result, experiment with\r\nit, and hopefully quickly grasp how things work.\r\n\r\nIf you find a problem, incorrect comment, obsolete or improper code or such,\r\nplease search for an issue about it at [ECS Issue](https://github.com/Behzadkhosravifar/ErrorControlSystem/issues)\r\nIf there isn't already an issue for it, please create a new one.\r\n\r\n\r\n\r\n--------------------------\r\n### Creating SQL Server Database Manually\r\n\r\n\r\nThe `ErrorControlSystem` project used from __UsersManagements __ database. So that is necessary for run this application.\r\nFor Creating __UsersManagements__ database on your server or pc do below steps:\r\n\r\nNote:\r\n>     In the new version database and tables automatically created by ErrorControlSystem\r\n\r\n\r\nFirst open `SQL Server Management Studio` then connect to your Server instance.\r\nNext step's, Create New Database by name __UsersManagements__ or any name of your choice.\r\n\r\nOnly be carefully, in order to launch the program, enter the database name. For example: \r\n\r\n```C#\r\nExceptionHandler.Engine.Start(new Connection(\"Server\", \"Database\", \"User\", \"Pass\"));\r\n\r\n// or simpler mode:\r\nExceptionHandler.Engine.Start(\"Server\", \"Database\", \"User\", \"Pass\");\r\n\r\n```\r\n\r\nNow, we need to create two table by names __ErrorLog__ and __Snapshots__ to save exceptions by screen captures.\r\n\r\n\r\n__ErrorLog Table:__\r\n\r\n| Column Name      | Data Type           | Description                                                   | Example\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n|:---------------- |:------------------- |:--------------------------------------------------------------|:---------------------------------------------------------------------------------|\r\n| ErrorId          |  `bigint`           | The unique identity number for exceptions by that location.\t | 51\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ServerDateTime   |  `datetime`         | Server system's date and time when the error occurred.\t\t | 2015-04-11 17:23:08.170\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Host             |  `varchar(200)`     | The client PC name.\t\t\t\t\t\t\t\t\t\t\t | KHOSRAVIFAR-B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| User             |  `varchar(200)`     | User Domain Name \\ User name in operation system\t\t\t\t | DBI\\khosravifar.b\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsHandled\t\t   |  `bit`              | Determine this error whether handled or not ?\t\t\t\t | True\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Type             |  `varchar(200)`     | Type of specify exceptions.\t\t\t\t\t\t\t\t\t | NullReferenceException\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AppName\t\t   |  `varchar(200)`     | The application name, who that run this module on self.\t \t | Examples.WinForms v1.0.0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Data             |  `xml`              | Provide additional user-defined information.\t\t\t\t\t | `<ExtraProperties><Status>RequestCanceled</Status><Response/></ExtraProperties>` |\r\n| CurrentCulture   |  `nvarchar(200)`    | Current keyboard language, may change over the app lifetime.  | English (United States) (en-US)\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CLRVersion\t   |  `varchar(100)`     | Version of Common Language Runtime.\t\t\t\t\t\t\t | 4.0.30319.34014\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Message          |  `nvarchar(MAX)`    | Message of Exceptions.\t\t\t\t\t\t\t\t\t\t | Object reference not set to an instance of an object.\t\t\t\t\t\t\t|\r\n| Source           |  `nvarchar(MAX)`    | Name of the application or the object that causes throw error.| mscorlib\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StackTrace       |  `nvarchar(MAX)`    | Representation of the immediate frames on the call stack.\t | N{namespace}.C{class}.M{method(parameters)} -> ...\t\t\t\t\t\t\t\t|\r\n| ModuleName\t   |  `varchar(200)`     | Name of the module that causes to throw exception.\t\t\t | Examples.WinForms.exe\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MemberType\t   |  `varchar(200)`     | Type of the member, include: Method, constructor, and so on.\t | Method\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Method           |  `nvarchar(500)`    | Name of the method that throws the exception.\t\t\t\t | Examples.WinForms.namespace.class.Void method(params)\t\t\t\t\t\t\t|\r\n| Processes        |  `varchar(MAX)`     | List of all running process when exception occurred.\t\t\t | vmware-hostd, Idle, ...\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ErrorDateTime\t   |  `datetime`         | Client system's date and time when the error occurred.\t\t | 2015-04-11 17:23:07.800\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| OS               |  `varchar(1000)`    | Information of the client operation system in `JSON` formats\t | Windows 8.1 64Bit v6.3.9600.0 - 64Bit Processor Architect - 32Bit Application\t|\r\n| IPv4Address\t   |  `varchar(50)`      | Network Internal IP Address\t\t\t\t\t\t\t\t\t | 192.168.30.40\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MACAddress\t   |  `varchar(50)`      | Network Physical Address (MAC)\t\t\t\t\t\t\t\t | 74D435F250A0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| HResult          |  `int`              | Error Code - Use GetType().Name for define exception model.   | -2147467261\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Line\t\t\t   |  `int`              | Line of exception occurrence code in file.\t\t\t\t\t | 125\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Column\t\t   |  `int`              | Column of exception occurrence code in file.\t\t\t\t\t | 17\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DuplicateNo\t   |  `int`              | Number of duplication for one exception's.\t\t\t\t\t | 5\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n<br/>\r\n\r\n__Snapshots Table:__\r\n\r\n| Column Name      | Data Type            |\r\n|:---------------- |:---------------------|\r\n| ErrorLogId       |   `int`              |\r\n| ScreenCapture    |   `image`            |\r\n\r\n<br/>\r\n\r\nFor easy way please go ahead and try [Wiki](https://github.com/Behzadkhosravifar/ErrorControlSystem/wiki) to use SQL Queries.\r\nThere are __SQL Scripts__ to create tables and queries.\r\n\r\n\r\n--------------------------\r\n### Get it on NuGet       [![Nuget count](http://img.shields.io/nuget/v/errorcontrolsystem.svg)](https://www.nuget.org/packages/errorcontrolsystem/)\r\n\r\nYou may use ErrorControlSystem as a library that you install with [Nuget](https://www.nuget.org/packages/ErrorControlSystem/) into your project or as a Visual Studio extension. \r\nThe way you want to use it depends on the scenario you are working on. You most likely want the [Nuget](https://www.nuget.org/packages/ErrorControlSystem/) package.\r\n\r\nTo install Error Control System from [Nuget](https://www.nuget.org/packages/ErrorControlSystem/), \r\nRun the following command in the [Package Manager Console](http://docs.nuget.org/consume/package-manager-console) :\r\n\r\n```powershell\r\nPM> Install-Package ErrorControlSystem\r\n```\r\n\r\n\r\n--------------------------\r\n### Contributing\r\n\r\n\r\nQuestions, comments, bug reports, and pull requests are all welcome.\r\nBug reports that include steps-to-reproduce (including code) are\r\npreferred. Even better, make them in the form of pull requests.\r\nBefore you start to work on an existing issue, check if it is not assigned\r\nto anyone yet, and if it is, talk to that person.\r\nAlso check the project [board](http://huboard.com/BehzadKhosravifar/ErrorControlSystem/board)\r\nand verify it is not being worked on (it will be tagged with the `Working` tag).\r\nIf it is not being worked on, before you start check if the item is `Ready`.\r\nIf the issue has the `Working` tag (working swimlane on Huboard) and has no Assignee\r\nthen it is not being worked on by somebody on the core team. Check the issue's\r\ndescription to find out who it is (if it is not there it has to be on the comments).\r\n\r\n\r\n--------------------------\r\n### Issues and task board\r\n \r\n\r\n* The task board is at [Huboard](http://huboard.com/BehzadKhosravifar/ErrorControlSystem/).\r\n* You can also check the [Github backlog](https://github.com/BehzadKhosravifar/ErrorControlSystem/issues) directly.","ModifyDate":"October 2014"},{"Row":2,"ProjectName":"Make Class Schedule","Id":12,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/MakeClassSchedule/MakeClassSchedule.jpg","Category":"   WinForm,   Genetic Algorithm","ProjectUrl":"https://github.com/Behzadkhosravifar/MakeClassSchedule","OpenSource":true,"Description":"Make university class schedule by Parallel Genetic Algorithm","Price":0.0,"Markdown":"<div align=\"center\">\r\n\r\n[![Make Class Schedule][4]][1]\r\n\r\n<br/>\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/4cjm8ir7bswf6nse?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/makeclassschedule)\r\n\r\n</div>\r\n\r\n--------------------\r\n\r\n### Welcome\r\n\r\nThank you for choosing Make Class Schedule ! <br/>\r\nMake Class Schedule is one of those NP hard problems. The problem can be solved using a heuristic search algorithm to find the optimal solution, but it only works for simple cases. For more complex inputs and requirements, finding a considerably good solution can take a while, or it may be impossible. This is where genetic algorithms come in to the game. <br/>\r\nIn this article, I assume that you are familiar with the basic concepts of genetic algorithms, and I won't describe them in detail because it has been done so many times before.\r\nWhen you make a class schedule, you must take into consideration many requirements (number of professors, students, classes and classrooms, size of classroom, laboratory equipment in classroom, and many others). These requirements can be divided into several groups by their importance. Hard requirements (if you break one of these, then the schedule is infeasible):\r\n\r\n* A class can be placed only in a spare classroom.\r\n* No professor or student group can have more then one class at a time.\r\n* A classroom must have enough seats to accommodate all students.\r\n* To place a class in a classroom, the classroom must have laboratory equipment (computers, in our case) if the class requires it.\r\n\r\nSome soft requirements (can be broken, but the schedule is still feasible):\r\n\r\n* Preferred time of class by professors.\r\n* Preferred classroom by professors.\r\n* Distribution (in time or space) of classes for student groups or professors.\r\n\r\nHard and soft requirements, of course, depend on the situation.\r\n\r\n\r\n**Algorithm**\r\n\r\nThe genetic algorithm is fairly simple. For each generation, it performs two basic operations:\r\n\r\n1. Randomly selects N pairs of parents from the current population and produces N new chromosomes by performing a crossover operation on the pair of parents.\r\n2. Randomly selects N chromosomes from the current population and replaces them with new ones. The algorithm doesn't select chromosomes for replacement if it is among the best chromosomes in the population.\r\n\r\nAnd, these two operations are repeated until the best chromosome reaches a fitness value equal to 1 (meaning that all classes in the schedule meet the requirement). As mentioned before, the genetic algorithm keeps track of the M best chromosomes in the population, and guarantees that they are not going to be replaced while they are among the best chromosomes.\r\n\r\nApplication main screen:\r\n\r\n<div align=\"center\">\r\n[![MakeClassSchedule.jpg][3]](https://github.com/Behzadkhosravifar/MakeClassSchedule/wiki/Welcome-to-the-Make-Class-Schedule)\r\n</div>\r\n\r\n--------------------------------\r\n### For More Information\r\n\r\n### [Read Make Class Schedule WiKi][2]\r\n\r\n[1]: http://behzadkhosravifar.github.io/MakeClassSchedule/\r\n[2]: https://github.com/Behzadkhosravifar/MakeClassSchedule/wiki/Welcome-to-the-Make-Class-Schedule\r\n[3]: http://resources.xomorod.com/web-applications/products/images/MakeClassSchedule/MakeClassSchedule.jpg\r\n[4]: http://resources.xomorod.com/web-applications/products/images/MakeClassSchedule/HelpHeader.png","ModifyDate":"June 2010"},{"Row":3,"ProjectName":"TSP","Id":13,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/TSP/screenshut.png","Category":"   WinForm,   Genetic Algorithm","ProjectUrl":"https://github.com/Behzadkhosravifar/TSP","OpenSource":true,"Description":"Traveling Salesman Problem Using Parallel Genetic Algorithms","Price":0.0,"Markdown":"<div align=\"center\">\r\n\r\n[![TSP](https://raw.githubusercontent.com/Behzadkhosravifar/TSP/master/src/TSP/Netclear.ico)][0]\r\n\r\n\r\n<h2>[Traveling Salesman Problem (TSP)][0]</h2>\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/rgk7q0cpuip0cbxy?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/tsp)\r\n\r\n</div>\r\n\r\n------------------------\r\n\r\nTravelling salesman problem (**TSP**) has been already mentioned in one of the previous chapters. To repeat it, there are cities and given distances between them.Travelling salesman has to visit all of them, but he does not to travel very much. Task is to find a sequence of cities to minimize travelled distance. In other words, find a minimal Hamiltonian tour in a complete graph of N nodes.\r\n\r\n<div align=\"center\">\r\n[![screen](http://resources.xomorod.com/web-applications/products/images/TSP/screenshut.png)][0]\r\n</div>\r\n\r\n**Note**:\r\n\r\nI do not have any degree in GA so this article can't be used as GA book or GA tutorial. There aren't any mathematics nor logic nor algebra about GA. It's only a programmer's view on Genetic Algorithms and only example of GA coding. Use it carefully! Any comments and criticism are highly appreciated.\r\n\r\n------------------------\r\n### Project Purpose\r\n\r\n**`Optimization Single Population Genetic Algorithm in Parallel Computing on TSP Example`**\r\n\r\n------------------------\r\n### Abstract\r\n\r\nThe article investigates the efficiency of the parallel computation of the single population Genetic Algorithm approach on Travelling Salesman Problem examples and multiprocessing systems. For the parallel algorithm design functional decomposition of the parallel application has been made and the manager/workers paradigm is applied. Performance estimation and parallelism profiling have been made on the basis of multiTasking program implementation.\r\n\r\n------------------------\r\n### I.\tINTRODUCTION\r\n\r\nThe foundation of **P**arallel **G**enetic **A**lgorithm (**PGA**) is **G**enetic **A**lgorithm (**GA**), which is a class of global, adaptable, and probabilistic search optimization and revolution algorithm gleaned from the model of organic evolution and also simulates the genetics and evolution of biologic population in nature. GA adopts naturally evolutionary model such as selection, crossover, mutation, deletion and transference. Mathematically, this evolutionary process is a typical algorithm to find out the optimal solution via iteration search among multi-element in a **N**on-deterministic **P**olynomial-time (**NP**) set. **S**imple **G**enetic **A**lgorithm (**SGA**) can be defined as `SGA=(M, C, F, o, Ps, Pc, Pm, T)`, where `C` is a fixed bitstring code, `F` is a fitness evaluation function, `M` is an initial population of biologic colony and `Ps`, `Pc`, `Pm` are probabilities of selection, crossover and mutation respectively. \r\n\r\nIn solving NP problems by Series GA, a large sample space will increase the length of chromosomes. And this causes to increase in time complexity of the algorithm. `[1]` <br/>\r\nWe've changed the serial genetic algorithm to be processed in Parallel. Finally, the time complexity is reduced.\r\n\r\nThe PGA uses two major modifications compared to the genetic algorithm. Firstly, selection for mating is distributed. Individuals live in a 2-D world. Selection of a mate is done by each individual independently in its neighborhood (presented in Fig.1). Secondly, each individual may improve its fitness during its lifetime by e.g. local hill-climbing.\r\n\r\n<br/>\r\n<div align=\"center\">\r\n\r\n![Figure 1][1]\r\n<br/>\r\n*Figure 1. \tThe random search and inherently parallel of genetic algorithm*\r\n\r\n</div>\r\n\r\n<br/>\r\nThe PGA is totally asynchronous, running with maximal efficiency on MIMD (Multiple Instruction, Multiple Data is a technique employed to achieve parallelism in computing) parallel computers. The search strategy of the PGA is based on a small number of active and intelligent individuals, whereas a GA uses a large population of passive individuals. Abstractly, a PGA is a parallel search with information exchange between the individuals in single population. We will investigate the PGA with deceptive problems and for example, implement it on the traveling salesman problem (TSP).\r\n\r\nParallel Computing are widely used nowadays for solving time-consuming problems. The travelling salesman problem is a well known combinatorial problem. `[2]`\r\n\r\nThe idea of the TSP is to find the shortest tour of a group of cities without visiting any town twice, but, practically, it implies the construction of a Hamiltonian cycle within a weighted fully connected undirected graph. Therefore, this is a problem of combinatorial graph search. The TSP is maybe one of the most explored problems in computer science. The applications of the TSP problem are numerous – in computer wiring, job scheduling, minimizing fuel consumption in aircraft, vehicle routing problem, robot learning, etc. `[3]`\r\n\r\nThe purpose of this paper is to provide a method in which the genetic algorithm into a parallel algorithm and to be of such issues (NP) in the optimal time by use of parallel processing to solve.\r\n\r\n\r\n-----------------------------\r\n### II.\tRESEARCH\r\n\r\nGenerally 4 models for implementation of parallel genetic algorithms have been proposed:\r\n*\tSingle Population Master / Slave (fitness)\r\n*\tSingle Population Fine-Grained or Cellular PGA\r\n*\tMultiple Population (with migration rate)\r\n*\tHierarchical\r\n\r\nIn all the above methods of the parallel genetic algorithm, the purpose of design optimization in terms of genetics was considered a better answer, not for the computational speed. \r\nMultiple population GAs are also widely used parallel methods, but they are more complex than single population methods. A key characteristic of multiple-population PGAs is the migration of individuals among sub populations. Each sub population is managed by an independent SGA except that the processors periodically exchange individuals. The computational burden in this size and span causes to reduce the speed of the system. \r\n\r\nSingle-population GAs are generally implemented using a master-slave model. In the master-slave model, a single population resides in the master processor and the master processor does the selection, crossover, and mutation; only evaluation of the fitness function is distributed among slave processors. The global single-population master-slave model that we use is illustrated in [Figure 2][2]. A portion of the population is distributed to each slave processor for evaluation of the fitness value of individuals. The master processor also retains a portion of the population so that it can carry out evaluation in parallel with the slave processors. Genetic operations other than evaluation are performed only by the master processor. The master processor assigns a fraction of the population to each slave processor for each generation. `[4]`\r\n\r\n<br/>\r\n<div align=\"center\">\r\n\r\n![Figure 2][2]\r\n<br/>\r\n*Figure 2. \tGlobal single-population master-slave PGA. The master stores the population, executes GA operations, and sends subsets of the population to the slaves. Each slave only evaluates the fitness of the individuals in its subpopulation, and sends the fitness value back to master.*\r\n\r\n</div>\r\n\r\n<br/>\r\nIn simpler problems (e.g.: TSP) the division of work between the processors just for evaluation is waste the CPU time and causes to be slower parallel trend of the series it.\r\n\r\nIn this article, our methodology is so like method of Master/Slave, but with this difference that workers (slaves) in addition to the processing of chromosome fitness, should do the mutation and crossover. Finally new offspring created from worker tasks and put it with a certain formula in manager population array's place. But to compute the genetic operands on the workers, we need an environment in which the genetic operands are able to work independently of other parts of the algorithm. Therefore, the chromosomes array should be stored globally in master until all worker tasks can use it concurrently.\r\n\r\nThe manager (master) after making the randomize initial population, perform array to sort according to fitness, then the number of worse chromosomes (according by selection rate) in the array is deleted until allow to do their new children Replacement. Before the placement operates, the number of chromosomes that is to new production and placement, was determinate by the selected function; then by divide the replacement counts on the number of the system processors,  can know how many offspring each worker must produced and finally this parameter with start index of manager array parameters send to worker tasks.\r\n\r\nThe most important part of our work was done at this stage, the workers must work independently and without reliance threads. And finally the generation process was done completely independently. So with the mutual exclusivity when parents split between workers and produce offspring, thereby increasing the independence of our processes. And just insertion of the produced children in the Global population array (which is located within the master) is in series state. But it can also be kept array as a sorted at any moment. Finally the array was always sorted and sorting algorithm in the manager is not required.\r\n\r\nFor the parallel algorithm design functional decomposition of the parallel application has been made and the manager/workers paradigm is applied. Performance estimation and parallelism profiling have been made on the basis of multiTasking program implementation. The experimental parallel computer platform is a computer by multi Processors comprising eight workstations (Processor or Computer) communicating via Parent Task (Manager or Network Switch). <br/>\r\nComputation is presented in [Fig.3][3].\r\n\r\n<br/>\r\n<div align=\"center\">\r\n\r\n![Figure 3][3]\r\n<br/>\r\n*Figure 3. \tThe flat parallel model of computing the TSP by genetic algorithm*\r\n\r\n</div>\r\n\r\n<br/>\r\nThe manager process (rank 0) performs all genetic operations for first population and distributes the computational load among the worker processes. It performs the following activities:\r\n\r\n1. Initializes population (randomize)\r\n2. Sort chromosomes by fitness value (the chromosome by lowest value is placed on first home of array)\r\n3. Chromosomes elitism and select worst chromosome for delete\r\n4. Define selection probability according chromosome fitness\r\n5. Construction workers to the number of cores for performs the genetic operators the along produce a new generation\r\n6. Wait for complete jobs of all workers\r\n7. Receives the evaluated offspring from workers and save new chromosomes by formula indexed in array\r\n8. Generates new population by combine any received offspring from workers in  array\r\n9. Check termination conditional for cut the loop\r\n10. Prints the computed shortest path\r\n\r\nThe operations of a worker process are as follows:\r\n\r\n1. Performs roulette wheel selection\r\n2. Performs recombination (select 2 points for  crossover)\r\n3. Performs normal random mutation (two cities are chosen and exchanged)\r\n4. Evaluates the fitness of new chromosome\r\n5. Insert offspring from specified start index related\r\n\r\n\r\n---------------------------\r\n### III.\tPARALLELISM PROFILING AND PERFORMANCE BENCHMARKING\r\n\r\nThe parallel program (Visual C# + .Net 4 MultiTasking) implementation is run in the programming environment of Visual Studio 2010 Parallelism profiling is made for the case of 500 cities. The results of calculations in parallel and in series of three graphs: time-fitness, time-generation, fitness-generation.\r\n\r\nObviously, that communication is quite intensive among the manager and the workers exchanging data about individuals (chromosomes and fitness). The communication transactions are performed via Task and so, the communication latency is very low. Formerly, the main shortcoming of the parallel genetic approach of computing the TSP with the manager/workers algorithmic paradigm is the sequential computation of the genetic operations – selection, mutation and reproduction – by the manager process. But now this operations run on workers.\r\n\r\nIn evaluating the proposed parallel algorithm with a series algorithm, according to [Figure 4][4] and [Figure 5][5] can be seen that even the fitness  of elite chromosomes in sequential generations have improved faster. Because independence in reproduction processing (parental dissimilarity) the children is the lack of  convergence. The result is improved to reach the desired fitness quickly. Of course given the evaluation figures on the TSP example should be consider that the Fitness is the distance between cities, so how much lower, more efficient and better value.\r\n\r\n<br/>\r\n\r\n<div align=\"center\">\r\n\r\n![Figure 4][4]\r\n<br/>\r\n*Figure 4. \tCompare best fitness of any generation in both state of series and parallel processing.*\r\n\r\n</div>\r\n\r\n<br/>\r\n\r\n<div align=\"center\">\r\n\r\n![Figure 5][5]\r\n<br/>\r\n*Figure 5. \tCompare elite chromosome fitness in every moment for both state of series and parallel processing.*\r\n\r\n</div>\r\n\r\n<br/>\r\n\r\nNext harvest of result evaluations accordance by [Figure 6][6] is that the generation produce rates is much faster than the series state.\r\n\r\n<br/>\r\n\r\n<div align=\"center\">\r\n\r\n![Figure 6][6]\r\n<br/>\r\n*Figure 6. \tCompare the number of generations produced in every moment of the series and parallel processing.*\r\n\r\n</div>\r\n\r\n<br/>\r\n\r\n--------------------------\r\n### IV.\tCONCLUSIONS\r\n\r\nBased on the evaluation and comparison can be proved  that the mutual exclusivity and independence of the workers, the children will not converging. And therefore the optimal solution will be faster. And also undertake all tasks (genetic operations) of master by workers is a causes to increasing the speed of parallel processing. This paper attempts until have the present algorithm provides more parallelism, and  has not exist any series tasks for master.\r\n\r\n\r\n--------------------------\r\n### REFERENCES\r\n\r\n`[1]`\tZh. Shen and Y. Zhao, “Niche Pseudo-Parallel Genetic Algorithms for Path Optimization of Autonomous Mobile Robot - A Specific Application of TSP” unpublished.\r\n\r\n`[2]`\tJ. Hennesy, D. Patterson, Computer Architecture. A Quantative Approach, 3rd\r\n\r\n`[3]`\tBorovska P., T. Ivanova, H. Salem. Efficient Parallel Computation of the Traveling Salesman Problem on Multicomputer Platform, Proceedings of the International Scientific Conference ‘Computer Science’2004, Sofia, Bulgaria, December 2004, pp. 74-7\r\n\r\n`[4]`\tCantú-Paz, Erick. 1998. A survey of parallel genetic algorithms. Calculateurs Paralleles. Vol. 10, No. 2. Paris: Hermes. http://www-illigal.ge.uiuc.edu/publications.php3 (Accessed 18 May 2000).\r\n\r\n\r\n\r\n[0]: https://github.com/Behzadkhosravifar/TSP\r\n[1]: http://resources.xomorod.com/web-applications/products/images/TSP/f1.jpg\r\n[2]: http://resources.xomorod.com/web-applications/products/images/TSP/f2.png\r\n[3]: http://resources.xomorod.com/web-applications/products/images/TSP/f3.jpg\r\n[4]: http://resources.xomorod.com/web-applications/products/images/TSP/f4.jpg\r\n[5]: http://resources.xomorod.com/web-applications/products/images/TSP/f5.jpg\r\n[6]: http://resources.xomorod.com/web-applications/products/images/TSP/f6.jpg","ModifyDate":"July 2009"},{"Row":4,"ProjectName":"SignalR","Id":15,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/SignalR/logo.jpg","Category":"   Win32 Library,   Win Service","ProjectUrl":"https://github.com/Behzadkhosravifar/SignalR","OpenSource":true,"Description":"A reusable win32 API for connect any client to server or each other clients. Send data or code from one client to other clients included.","Price":0.0,"Markdown":"<div align=\"center\">\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/qs8hglln9b55nyk4?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/signalr)\r\n[![GitHub license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/Behzadkhosravifar/SignalR/blob/master/LICENSE)\r\n[![GitHub first friendly](https://img.shields.io/badge/first--timers--only-friendly-blue.svg)](http://www.firsttimersonly.com/)\r\n\r\n</div>\r\n\r\n---------------------------\r\n\r\n### What Is This?\r\n\r\nA reusable win32 API  for connect any client to server or each other clients. Send data or code from one client to other clients included.\r\n\r\n---------------------------\r\n### SignalR Server\r\nIf you want to install or unistall a service for signalR server or just run the server without installing, do following commands:\r\n\r\n* Install signalR service: <br/>\r\n\t`$ SignalR\\Out\\SignalR\\Core.Server\\SignalRServer.exe /i` <br/>\r\n\tor <br/>\r\n\t`$ SignalR\\Solution Items\\InstallSignalRService.bat`\r\n\r\n\r\n* Uninstall signalR service: <br/>\r\n\t`$ SignalR\\Out\\SignalR\\Core.Server\\SignalRServer.exe /u` <br/>\r\n\tor <br/>\r\n\t`$ SignalR\\Solution Items\\UninstallSignalRService.bat`\r\n\r\n\r\n* Delete signalR service: <br/>\r\n\t`$ SignalR\\Solution Items\\DeleteSignalRService.bat`\r\n\r\n\r\n* Execute signalR server (without install service): <br/>\r\n\t`$ SignalR\\Out\\SignalR\\Core.Server\\SignalRServer.exe /d` <br/>\r\n\tor <br/>\r\n\t`$ SignalR\\Solution Items\\RunServiceOnWPF.bat`\r\n\r\n<div align=\"center\">\r\n\t![wpfServer](http://resources.xomorod.com/web-applications/products/images/SignalR/wpfServer.PNG)\r\n</div>\r\n\r\n--------------------------\r\n### SignalR Clients\r\nA sample project in win32 for present signalR client\r\n\r\n<div align=\"center\">\r\n![clients](http://resources.xomorod.com/web-applications/products/images/SignalR/clients.PNG)\r\n</div>\r\n\r\n### SignalR Clients Controller\r\nThe clients controller in fact is a signalR client, but this project can be controll all signalR clients in network.\r\n\r\nFor e.x:\r\n\r\n<div align=\"center\">\r\n![clientsController](http://resources.xomorod.com/web-applications/products/images/SignalR/clientsController.png)\r\n</div>\r\n\r\nIn this application you can fetch any events of server from server windows logs by clicking on `Show Server Event Logs`\r\n\r\n<div align=\"center\">\r\n![logViewer](http://resources.xomorod.com/web-applications/products/images/SignalR/logViewer.png)\r\n</div>\r\n\r\nAnd by selecting one client in from list you can to control that by this form:\r\n<div align=\"center\">\r\n![ControlUser](http://resources.xomorod.com/web-applications/products/images/SignalR/selectedUserController.png)\r\n</div>\r\n\r\nIn `Control User` form you can to send a message to selected users or execute an stored procedure on that clients. <br/>\r\nBy click on `Custom Procedure` you should see this form:\r\n<div align=\"center\">\r\n![dynamicCodeExec](http://resources.xomorod.com/web-applications/products/images/SignalR/dynamicCodeExec.PNG)\r\n</div>\r\n\r\nIn `Runtime Dynamic Compiler` form you can type your c# codes to executed on selected users system.\r\n\r\n---------------------\r\n### Note\r\n\r\nFor create your custom projects you must to know this package locations:\r\n\r\nInstall Nuget packages for server project:\r\n\r\n\tPM> Install-Package Microsoft.AspNet.SignalR.SelfHost\r\n\tPM> Install-Package Microsoft.Owin.Cors\r\n\r\nInstall Nuget packages for clients project:\r\n\r\n\tPM> Install-Package Microsoft.AspNet.SignalR.Client","ModifyDate":"July 2015"},{"Row":5,"ProjectName":"Fox Robbit","Id":5,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/FoxRabbit/ioan-dzitac-fuzzy-logic.jpg","Category":"   WinForm,   Fuzzy Logic","ProjectUrl":"https://github.com/Behzadkhosravifar/FoxRabbit","OpenSource":true,"Description":"Fox Rabbit implemented by Fuzzy Logic algorithm","Price":0.0,"Markdown":"<div align=\"center\">\r\n\r\nFox Rabbit implemented by Fuzzy Logic algorithm\r\n\r\n![icon](http://resources.xomorod.com/web-applications/products/images/FoxRabbit/ioan-dzitac-fuzzy-logic.jpg)\r\n\r\n<div align=\"center\">","ModifyDate":"December 2009"},{"Row":6,"ProjectName":"WHOis","Id":8,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/WHOis/screenshut.png","Category":"   WinForm","ProjectUrl":"https://github.com/Behzadkhosravifar/WHOis","OpenSource":true,"Description":"Whois Online Domain Database for check several domains are reserved or not","Price":0.0,"Markdown":"<div align=\"center\">\r\n[![Build status](https://ci.appveyor.com/api/projects/status/t1k1cklv1q6ndymg?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/whois)\r\n</div>\r\n\r\n----------------------\r\n\r\nWhois **several domains** to know are reserved or not!\r\n\r\n<div align=\"center\">\r\n![Capture](http://resources.xomorod.com/web-applications/products/images/WHOis/screenshut.png)\r\n</div>\r\n\r\nClick on `Save Whois Result` to export whois data like below text file:\r\n\r\n\r\n|│|  Domain\t\t|│|  .com        |│|  .net         |│|  .ir  |│|                \t\r\n|-|:------------|-|:-------------|-|:--------------|-|:------|-|\r\n|│|  Aada\t\t|│|  Reserved    |│|  Reserved     |│|  Free |│|           \r\n|│|  Aalia\t\t|│|  Reserved    |│|  Reserved     |│|  Free |│|           \r\n|│|  Aaliyah    |│|  Reserved    |│|  Reserved     |│|  Free |│|           \r\n|│|  Aanisah    |│|  Reserved    |│|  Free         |│|  Free |│|                  \t\r\n|│|  Abalina    |│|  Reserved    |│|  Free         |│|  Free |│|           \r\n|│|  Abbetina   |│|  Free        |│|  Free         |│|  Free |│|           \r\n|│|  Abbie      |│|  Reserved    |│|  Reserved     |│|  Free |│|           \r\n|│|  Abbigail   |│|  Reserved    |│|  Reserved     |│|  Free |│|           \r\n","ModifyDate":"October 2015"},{"Row":7,"ProjectName":"Snipping Multiple Screen","Id":10,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/SnippingMultipleScreen/AppScreenShot.jpg","Category":"   WPF","ProjectUrl":"https://github.com/Behzadkhosravifar/SnippingMultipleScreen","OpenSource":true,"Description":"Snipping Multiple Screen is a WPF application to capture many screen shot and merging that's to a picture and save it for you on Windows.","Price":0.0,"Markdown":"<div align=\"center\">\r\n[![Build status](https://ci.appveyor.com/api/projects/status/3ysq6ujt1lcmll26?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/snippingmultiplescreen)\r\n</div>\r\n\r\n-------------------------\r\n\r\nSnipping Multiple Screen is a WPF application to capture many screen shot and merging that's to a picture and save it for you on Windows.\r\n\r\n--------------------------------\r\n### How To Use The Examples\r\n\r\nFirst capture your snapshuts from display screen:\r\n\r\n<div align=\"center\">\r\n![First Capture](http://resources.xomorod.com/web-applications/products/images/SnippingMultipleScreen/AppScreenShot.jpg)\r\n</div>\r\n\r\n<br/>\r\n\r\nAfter save your output is like this:\r\n\r\n<div align=\"center\">\r\n![After Save](http://resources.xomorod.com/web-applications/products/images/SnippingMultipleScreen/AppOutput.png)\r\n</div>","ModifyDate":"May 2010"},{"Row":8,"ProjectName":"Tic Tac Toe","Id":11,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/TicTacToe/TicTacToe.png","Category":"   WinForm,   Game","ProjectUrl":"https://github.com/Behzadkhosravifar/TicTacToe","OpenSource":true,"Description":"Tic Tac Toe puzzle application","Price":0.0,"Markdown":"<div align=\"center\">\r\n![ttt](http://resources.xomorod.com/web-applications/products/images/TicTacToe/TicTacToe.png)\r\n\r\n<br/>\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/x9jsv7f99yarp1tg?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/tictactoe)\r\n</div>\r\n\r\n--------------------\r\n\r\n\r\nTic Tac Toe puzzle application, designed in C# WinForm\r\n\r\n<div align=\"center\">\r\n![Capture](http://resources.xomorod.com/web-applications/products/images/TicTacToe/screenshut.jpg)\r\n</div>","ModifyDate":"July 2008"},{"Row":9,"ProjectName":"Sudoku 9×9","Id":6,"ImageLink":"http://resources.xomorod.com/web-applications/products/images/Sudoku9/appScreenShut.png","Category":"   WinForm,   Game","ProjectUrl":"https://github.com/Behzadkhosravifar/Sudoku#sudoku-99","OpenSource":true,"Description":"Sudoku 9×9 puzzle application","Price":0.0,"Markdown":"<div align=\"center\">\r\n[![Build status](https://ci.appveyor.com/api/projects/status/7742cq7k7pfydwat?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/sudoku)\r\n</div>\r\n\r\n--------------------\r\n\r\nSudoku 9×9 puzzle application designed in C# winForm.\r\n\r\n<div align=\"center\">\r\n![First Capture](http://resources.xomorod.com/web-applications/products/images/Sudoku9/appScreenShut.png)\r\n</div>","ModifyDate":"October 2007"}]